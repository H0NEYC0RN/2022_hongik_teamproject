using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.UI;


public class ActionController : MonoBehaviour
{
    [SerializeField]
    private float range;  // 아이템 습득이 가능한 최대 거리

    private bool pickupActivated = false;  // 아이템 습득 가능할시 True 

    private RaycastHit hitInfo;  // 충돌체 정보 저장

    [SerializeField]
    private LayerMask layerMask;  // 특정 레이어를 가진 오브젝트에 대해서만 습득할 수 있어야 한다.

    [SerializeField]
    private Text actionText;  // 행동을 보여 줄 텍스트

    [SerializeField]
    private Inventory theInventory;  // Inventory.cs

    void Update()
    {
        CheckItem();
        TryAction();
    }

    private void TryAction()  // E키 입력 시 CheckItem과정을 한다. CanPickUP 실제로 아이템 줍는 처리
    {
        if (Input.GetKeyDown(KeyCode.E))  // 키코드는 원하는대로 바꾸기
        {
            CheckItem();
            CanPickUp();
        }
    }

    private void CheckItem()               
    {
        if (Physics.Raycast(transform.position, transform.forward, out hitInfo, range, layerMask))  // 메인카메라의 위치 (transform.position)으로부터 앞방향으로 사정거리인 range에 달하는 광선을 쐈을 때 
        {
            if (hitInfo.transform.tag == "Item")  //  layerMask에 해당되는 충돌된 오브젝트가 있다면 이 충동 정보를 hitInfo에 담고 True를 리턴, 태그가 Item이면
            { 
                ItemInfoAppear();                 // 아이템을 주울 수 있는 상태, 아이템을 주우라는 텍스트 띄우기
            }
        }
        else
            ItemInfoDisappear();                  // 사정거리에 layerMask 가진 오브젝트가 없을 경우 주울 수 없음 텍스트 비활성
    }

    private void ItemInfoAppear()
    {
        pickupActivated = true;
        actionText.gameObject.SetActive(true);
        actionText.text = hitInfo.transform.GetComponent<ItemPickUp>().item.itemName + " 획득  " + "<color=yellow>" + "(E)" + "</color>";  // 이건 어차피 화면에 나오는 거라 멘트는 바꿀 수 있음 E를 노란색으로 강조
    }

    private void ItemInfoDisappear()
    {
        pickupActivated = false;
        actionText.gameObject.SetActive(false);
    }

    private void CanPickUp()
    {
        if (pickupActivated)
        {
            if (hitInfo.transform != null)
            {
                Debug.Log(hitInfo.transform.GetComponent<ItemPickUp>().item.itemName + " 획득 했습니다.");  // 인벤토리 넣기
                Destroy(hitInfo.transform.gameObject);
                ItemInfoDisappear();
            }
        }
    }
}
