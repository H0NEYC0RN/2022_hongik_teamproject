using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.SceneManagement;
using UnityEngine.UI;

public class Player_state : MonoBehaviour
{
    private Collider Col;

    //숨기 기능 관련
    public bool isHided = false;
    public bool Hide_ready;
    [SerializeField] GameObject Hide_ON;
    [SerializeField] GameObject Hide_OFF;
    [SerializeField] GameObject Event_ON;
    [SerializeField] Image Fade; //1920*1080(0,0,0)

    //클리어 조건 관련
    public int Event_count = 0;
    [SerializeField] GameObject USB;
    [SerializeField] GameObject KEY;
    [SerializeField] GameObject Exit;
    public bool USB_done;
    public bool KEY_done;
    public bool isExit;

    //리셋 및 게임 오버 조건 관련
    public bool Reset_ON = false;
    public int Death_count = 0;

    //UI 관련
    [SerializeField] Text Obstacle_txt;
    [SerializeField] GameObject Dialogue;

    void Start()
    {
        Col = this.GetComponent<CapsuleCollider>();
        Event_ON.SetActive(false);

        Hide_ON.SetActive(false);
        Hide_OFF.SetActive(true);

        Dialogue.SetActive(false);
        Obstacle_txt.text = "";
        
    }

    void Update()
    {
        Hide();
        Hide_check();

        USB_done = USB.GetComponent<USB>().USB_done;
        KEY_done = KEY.GetComponent<KEY>().KEY_done;
        isExit = Exit.GetComponent<Exit>().isExit;

        Event_check();
    }

    void Event_check()
    {
        if (KEY_done ==true)
        {
            if (USB_done == true)
            {
                Event_count = 2;
            }
            else
            {
                Event_count = 1;
            }
        }
        else
        {
            Event_count = 0;
        }
    }

    // Player의 Hide 여부 체크
    void Hide_check()
    {
        if (Hide_ready == true)
        {
            if (isHided == false)
            {
                if (Input.GetKeyUp(KeyCode.E))
                {
                    isHided = true;
                    SoundManager.instance.PlayHideEnter();
                    FadeIN();
                }
            }
            else
            {
                if (Input.GetKeyUp(KeyCode.E))
                {
                    isHided = false;
                    SoundManager.instance.PlayHideEscape();
                    FadeOUT();
                }
            }
        }
    }

    // 캐릭터가 Hide 상태일때 캐릭터의 tag를 변경해 Enemy가 추적하지 못하게 함
    // 캐릭터가 Hide 상태일때, Player의 Collider를 Trigger로 변경시켜 Enemy가 Player를 통과하게 함
    void Hide()
    {
        if (isHided == true)
        {
            this.tag = "Hide";
            Col.isTrigger = true;
            Obstacle_txt.text = "무사히 숨었다. 다시 나갈까?\n(E키를 눌러 상호작용 할 수 있다.)";

        }
        else
        {
            this.tag = "Player";
            Col.isTrigger = false;
        }
    }


    // 화면 Fade IN
    IEnumerator InFadeUI()
    {
        float StartAlpha = 0;
        while (StartAlpha < 1.0f)
        {
            StartAlpha += 0.01f;
            yield return new WaitForSeconds(0.01f);
            Fade.color = new Color(0, 0, 0, StartAlpha);

            if (StartAlpha == 1)
            {
                yield break;
            }
        }
    }

    void FadeIN()
    {
        StartCoroutine(InFadeUI());
    }

    // 화면 Fade OUT
    IEnumerator OUTFadeUI()
    {
        float StartAlpha = 1;
        while (StartAlpha >= 0.0f)
        {
            StartAlpha -= 0.01f;
            yield return new WaitForSeconds(0.01f);
            Fade.color = new Color(0, 0, 0, StartAlpha);
            if (StartAlpha == 0)
            {
                yield break;
            }
        }
    }

    void FadeOUT()
    {
        StartCoroutine(OUTFadeUI());
    }

    private void Reset_off()
    {
        Reset_ON = false;
    }

    // Enemy에게 붙잡히면(닿으면) 게임오버 화면 출력
    private void OnCollisionEnter(Collision col)
    {
        if (isHided == false)
        {
            if (col.gameObject.tag == "Enemy")
            {
                Reset_ON = true;
                Death_count += 1;
                Invoke("Reset_off", 1f);
            }
        }
    }

    // Player 가 Event 의 범위 안에 들어왔을 때, 이벤트 사용 가능 여부 UI 표시
    private void OnTriggerStay(Collider other)
    {
        if (other.tag == "Event")
        {
            Event_ON.SetActive(true);
            Dialogue.SetActive(true);
            Obstacle_txt.text = "E키를 눌러 상호작용 할 수 있다.";
        }
        if (other.tag == "Hide_Object")
        {
            Hide_ready = true;
            Hide_ON.SetActive(true);
            Hide_OFF.SetActive(false);

            Event_ON.SetActive(true);
            Dialogue.SetActive(true);
            Obstacle_txt.text = "숨을 수 있는 곳 같다.\n(E키를 눌러 상호작용 할 수 있다.)";
        }
        if (other.tag == "Obstacle")
        {
            Dialogue.SetActive(true);
            Obstacle_txt.text = "시간이 없다.\n빨리 찾으러 가야한다.";
        }
        if (other.tag == "Hide")
        {
            Event_ON.SetActive(false);
            Dialogue.SetActive(false);
            Obstacle_txt.text = "";
        }
    }

    private void OnTriggerExit(Collider other)
    {
        if (other.tag == "Event")
        {
            Event_ON.SetActive(false);
            Dialogue.SetActive(false);
            Obstacle_txt.text = "";
        }
        if (other.tag == "Hide_Object")
        {
            Hide_ready = false;
            Hide_ON.SetActive(false);
            Hide_OFF.SetActive(true);

            Event_ON.SetActive(false);
            Dialogue.SetActive(false);
            Obstacle_txt.text = "";
        }
        if (other.tag == "Obstacle")
        {
            Dialogue.SetActive(false);
            Obstacle_txt.text = "";
        }
    }
}
