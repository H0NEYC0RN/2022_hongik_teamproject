using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.SceneManagement;
using UnityEngine.UI;

public class Player_state : MonoBehaviour
{
    private bool isHided;
    private bool isEvented;
    [SerializeField] GameObject Hide_ON;
    [SerializeField] GameObject Event_ON;
    [SerializeField] Image Fade; //1920*1080(0,0,0)
    public int Event_count;

    void Start()
    {
        isHided = false;
        Event_ON.SetActive(false);
        Hide_ON.SetActive(false);

        Event_count = 0;
    }

    void Update()
    {
        Hide();
        Hide_check();

        if (isEvented == true)
        {
            if (Input.GetKeyUp(KeyCode.E))
            {
                Event_count++;
            }
        }
    }


    // Player의 Hide 여부 체크
    void Hide_check()
    {
        if (isHided == false)
        {
            if (Input.GetKeyUp(KeyCode.Q))
            {
                isHided = true;
                Hide_ON.SetActive(true);
                FadeIN();
            }
        }
        else
        {
            if (Input.GetKeyUp(KeyCode.Q))
            {
                isHided = false;
                Hide_ON.SetActive(false);
                FadeOUT();
            }
        }
    }

    // 캐릭터가 Hide 상태일때 캐릭터의 tag를 변경해 Enemy가 추적하지 못하게 함
    void Hide()
    {
        if (isHided == true)
        {
            this.tag = "Hide";
        }
        else
        {
            this.tag = "Player";
        }
    }


    // 화면 Fade IN
    IEnumerator InFadeUI()
    {
        float StartAlpha = 0;
        while (StartAlpha < 1.0f)
        {
            StartAlpha += 0.01f;
            yield return new WaitForSeconds(0.01f);
            Fade.color = new Color(0, 0, 0, StartAlpha);

            if (StartAlpha == 1)
            {
                yield break;
            }
        }
    }

    void FadeIN()
    {
        StartCoroutine(InFadeUI());
    }

    // 화면 Fade OUT
    IEnumerator OUTFadeUI()
    {
        float StartAlpha = 1;
        while (StartAlpha >= 0.0f)
        {
            StartAlpha -= 0.01f;
            yield return new WaitForSeconds(0.01f);
            Fade.color = new Color(0, 0, 0, StartAlpha);
            if (StartAlpha == 0)
            {
                yield break;
            }
        }
    }

    void FadeOUT()
    {
        StartCoroutine(OUTFadeUI());
    }


    // Enemy에게 붙잡히면(닿으면) 게임오버 화면 출력
    private void OnCollisionEnter(Collision col)
    {
        if (col.gameObject.tag == "Enemy")
        {
            SceneManager.LoadScene("Gameover");
        }
    }

    // Player 가 Event 의 범위 안에 들어왔을 때, 이벤트 사용 가능 여부 UI 표시
    private void OnTriggerStay(Collider other)
    {
        if (other.tag == "Event")
        {
            Event_ON.SetActive(true);
            isEvented = true;
        }
    }
}
